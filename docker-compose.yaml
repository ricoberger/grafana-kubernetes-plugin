services:
  grafana:
    extends:
      file: .config/docker-compose-base.yaml
      service: grafana
    build:
      args:
        anonymous_auth_enabled: ${ANONYMOUS_AUTH_ENABLED:-false}
        grafana_image: ${GRAFANA_IMAGE:-grafana}
        grafana_version: ${GRAFANA_VERSION:-12.2.0}
    environment:
      GF_LOG_FILTERS: plugin.ricoberger-kubernetes-datasource:debug
      GF_LOG_LEVEL: error
      GF_AUTH_BASIC_ENABLED: true
      GF_PATHS_CONFIG: /etc/grafana/provisioning/custom.ini
    volumes:
      - ./kubeconfig-grafana.yaml:/kubeconfig-grafana.yaml
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - jaeger
      - k3s-kubeconfig

  jaeger:
    container_name: grafana-jaeger
    image: cr.jaegertracing.io/jaegertracing/jaeger:2.10.0

  k3s:
    container_name: grafana-k3s
    image: rancher/k3s:v1.32.1-k3s1
    command:
      - server
      - --disable=traefik
      - --tls-san=grafana-k3s
    tmpfs:
      - /run
      - /var/run
    privileged: true
    environment:
      - K3S_CLUSTER_SECRET=somethingsecret
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=666
    volumes:
      - k3s-grafana:/var/lib/rancher/k3s
      - .:/output
    ports:
      - 6443:6443

  # Adjust the kubeconfig file generated by k3s to use the k3s service name
  # instead of 127.0.0.1. This allows the Kubernetes datasource in Grafana to
  # connect to the k3s API server.
  k3s-kubeconfig:
    container_name: grafana-k3s-kubeconfig
    image: busybox:1.37.0
    command:
      - /bin/sh
      - -c
      - |
        sed "s/127.0.0.1/grafana-k3s/g" /output/kubeconfig.yaml > /output/kubeconfig-grafana.yaml

        while true; do
          sleep 3600;
        done
    volumes:
      - .:/output
    depends_on:
      - k3s

volumes:
  k3s-grafana: {}
